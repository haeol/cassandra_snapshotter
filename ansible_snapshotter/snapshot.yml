---
- hosts: "{{ nodes }}" # extra-vars

  vars:

    host_snapshotter_directory: "~/ansible_playbook/snapshotter"
    save_snapshot_directory: "{{ path }}" # extra-vars

  tasks:

  - name: check if snapshotter exists in nodes
    stat:
      path: '{{ host_snapshotter_directory }}/snapshotter.py'
    register: node_snapshot

  - name: check if save_schema exists in nodes
    stat:
      path: '{{ host_snapshotter_directory }}/save_schema.py'
    register: node_schema

  - name: check for cassandra_snapshotter in this directory
    local_action: >
      stat
      path="{{ playbook_dir }}/snapshotter/"
    register: cassandra_snapshotter
    when: node_snapshot.stat.exists == False

  - fail:
      msg: >
        "cassandra_snapshotter folder does not exist in this directory."
        "Clone the cassandra_snapshotter repo into this directory"
    when: ( (node_snapshot.stat.exists == False) or
            (node_schema.stat.exists   == False) ) and
          (cassandra_snapshotter.stat.exists == False)

  - name: Delete old snapshotter files (--reset)
    file:
      path: "{{ host_snapshotter_directory }}"
      state: absent
    when: "{{ reset }}"

  - name: Copy cassandra snapshotter to nodes
    copy:
      src: "{{ playbook_dir }}/snapshotter"
      dest: ~/ansible_playbook
      force: yes
    when: node_snapshot.stat.exists == False or "{{ reset }}"

  - name: check if pyyaml installed
    command: python -c "import yaml"
    register: pyyaml
    ignore_errors: True

  - name: import error
    pip: name=pyyaml version=3.11
    become: true
    when: pyyaml.rc != 0

  - name: Run save schema on one machine
    command: "python {{ host_snapshotter_directory }}/save_schema.py"
    run_once: true
    delegate_to: "{{ play_hosts[0] }}"

  - name: Fetch save_schema from machine
    fetch:
      src: "{{ host_snapshotter_directory }}/.snapshots/{{ item }}"
      dest: "{{ save_snapshot_directory }}"
      flat: yes
      fail_on_missing: yes
    with_items:
      - "ring_info.txt"
      - "schemas.zip"
    run_once: true
    delegate_to: "{{ play_hosts[0] }}"


  - name: Run snapshotter on all nodes
    command: "python {{ host_snapshotter_directory }}/snapshotter.py"
    register: output
    ignore_errors: yes

  - name: Writing output to file
    local_action: >
      copy
      content="{{ output.stdout }}"
      dest="{{ playbook_dir }}/output_logs/output-{{ inventory_hostname }}.txt"
      force=yes

  - fail:
      msg: "Error in running snapshotter, output located in ./output_logs/{{ inventory_hostname }}.txt"
    when: output.rc != 0

  - name: Retrieve node snapshots
    fetch:
      src: "{{ host_snapshotter_directory }}/.snapshots/{{ inventory_hostname }}.zip"
      dest: "{{ save_snapshot_directory }}"
      fail_on_missing: yes
      flat: yes

